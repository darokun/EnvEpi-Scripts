+ Non-lineal regression class

* Slide 4
* Read-in the data
libname class â€˜Path to folder where data set is located';
data nonlinear;
set class.nonlinear;
run;

* what's the number of observations?
PROC MEANS DATA=non.linear n nmiss min max mean clm;
* var name_of_variables;
RUN;

* Slide 5
* Data description
* look at age, SBP, DBP, hdl and bmi. Create scatterplots and describe.
proc gplot
data = nonlinear;
plot alhdlaz*atbmi;
run;
quit;

* Slide 6
* do a smooth scatterplot:
proc kde data=nonlinear;
bivar atalter atsysmm / /*bwm=.5*/ plots=contour;
run;

* slide 7: linear regression model
* x=bmi, y=hdl
proc genmod data=nonlinear;
model alhdlaz=atbmi / dist=normal;
output out=b p=yhat;
run;

* Slide 9:
* plot and interpret results
symbol1 color=black
	interpol=none
	value=dot;
symbol2 color=blue
	interpol=join;

proc gplot data=b;
 plot alhdlaz*atbmi yhat*atbmi / overlay;
 run;
 quit;

symbol1;
symbol2;

* Slide 10: polynomial regression models
* quadratic polynomial, where  bmi2=atbmi*atbmi.
data nonlinear;
set nonlinear;
atbmi2=atbmi*atbmi;
run;

proc genmod data=nonlinear;
model alhdlaz=atbmi atbmi2 / dist=normal;
output out=b p=yhat;
run;

* Slide 12
* plot quadratic polynomial
symbol1 color=black
	interpol=none
	value=dot;
symbol2 color=red
	interpol=splines;

proc gplot data=b;
plot (alhdlaz yhat)*atbmi / overlay;
run;
quit;

* Slide 14: piecewise linear regression
* define knot at value 30
data nonlinear;
set nonlinear;
  if atbmi<30 then bmic=0; else bmic=1;
  bmidiff=(atbmi-30)*bmic;
run;

proc reg data=nonlinear;
  model alhdlaz=atbmi bmidiff;
  output out=b p=yhat;
run;
quit;
* plot results

*Slide 16: B-splines
* degree 3
proc transreg data = nonlinear design;
  model identity(alhdlaz) = bspline(atbmi/degree=3 knots=30)/ SS2;
  output out=splineout;
run;

* Slide 17
* plot basis functions
proc gplot
data=splineout;
plot (Intercept -- atbmi_4)
  *atbmi/ overlay;
run;
quit;

* Slide 18:
* create a dataset with the basis functions
data splineout;
set splineout;
  t0 = 71.8235080*atbmi_0;
  t1 = 65.9769697*atbmi_1;
  t2 = 32.0049391*atbmi_2;
  t3 = 59.1401642*atbmi_3;
  t4 = 35.7445817*atbmi_4;
run;

* Slide 19:
* plot basis functions
proc gplot
data=splineout;
  plot (t0 t1 t2 t3
  t4)*atbmi/ overlay;
run;
quit;

* Slide 20
* create the non-linear function by combining the basis functions and plot non-linear function
data splineout;
set splineout;
pred = t0+t1+t2+t3+t4;
run;

proc gplot data=splineout;
plot (alhdlaz pred)*atbmi/
overlay;
run;
quit;

* Slide 21:
* easier alternative
proc transreg data = nonlinear design;
  model identity(alhdlaz) = bspline(atbmi/degree=3 knots=30)/ SS2;
  output out=splineout PREDICTED;
  /*Specification of PREDICTED adds the predicted values to the output data set
  -> default name is Py -> here Palhdlaz */
run;

proc gplot data=splineout;
plot (alhdlaz Palhdlaz)*atbmi/ overlay;
run;
quit;

* Slide 22: bin smoother:
* divide into three sub-intervals and create boxplots:
data nonlinear;
set nonlinear;
if .< atbmi<25 then bmicat=22;
if atbmi ge 25 and atbmi<30
then bmicat=27.5;
if atbmi ge 30
 then bmicat=33;
if atbmi=.
 then bmicat=10;
run;

proc gplot data=nonlinear;
plot alhdlaz*atbmi alhdlaz*bmicat
/overlay href=25 30 LHREF=3;
run;
quit;

* Slide 23:
* plot bin means
data nonlinear;
set nonlinear;
  if bmicat=22 then binmean= 59.5391003;
  if bmicat=27.5 then binmean= 51.8375000;
  if bmicat=33 then binmean= 48.0125000;
run;

symbol2 color=black
interpol=STEPJR *creates step function
value=star;
proc gplot data=nonlinear;
plot alhdlaz*atbmi binmean*bmicat /overlay;
run;
quit;

* Slide 25: BONUS
* penalized B-splines
proc transreg data = nonlinear ;
model identity(alhdlaz) = pbspline(atbmi /degree=3 nknots=10
lambda=1000 aic)/ SS2; output out=pb PREDICTED;
run;

proc sort data= pb;
by atbmi;
run;

proc gplot data=pb;
plot (alhdlaz Palhdlaz )*atbmi/ overlay;
run; quit;

  









